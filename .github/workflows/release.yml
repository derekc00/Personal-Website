name: Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test:run
    
    - name: Build
      run: npm run build
    
    - name: Generate release notes
      id: release_notes
      run: |
        # Get the last release tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$LAST_TAG" ]; then
          # First release
          COMMITS=$(git log --pretty=format:"- %s" --since="1 week ago")
        else
          # Get commits since last tag
          COMMITS=$(git log --pretty=format:"- %s" ${LAST_TAG}..HEAD)
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## Changes
        
        $COMMITS
        
        ## Deployment
        
        This release has been automatically deployed to production via Vercel.
        EOF
        
        echo "Generated release notes"
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body_path: release_notes.md
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}